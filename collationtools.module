<?php

/**
 * @file
 * Module file for HRITServer collation views
 */

/**
 * @defgroup collationtools AustESE collation views
 * @ingroup austese
 * @{
 * AustESE collation views
 *
 */

/**
 * Implements hook_help().
 *
 */
function collationtools_help($path, $arg) {
  switch ($path) {
    case 'collationtools':
      return t('AustESE Collation Tools');
    case 'collationtools/apparatus':
      return t('AustESE collation views');
    case 'collationtools/compare':
      return t('AustESE collation compare view');
    case 'collationtools/slider':
      return t('Alternative slider');
    case 'admin/help#collationtools':
      // Help text for the admin section, using the module name in the path.
      return t('AustESE collation views');
  }
}

/**
 * Implements hook_permission().
 *
 */
function collationtools_permission() {
  return array(
    'view collation tools' => array(
      'title' => t('View collation tools'),
      'description' => t('Allow users to view collation tools'),
    )
  );
}

/**
 * Implements hook_menu().
 *
 *
 * @see hook_menu()
 * @see menu_example
 */
function collationtools_menu() {
  // by default any path after this is split and provided as args to alignment_view
  $items['collationtools'] = array(
    'title' => 'Collation Tools',
    'page callback' => 'collationtools_toc',
    'access arguments' => array('view collation tools'),
    'type' => MENU_CALLBACK
  );
  $items['collationtools/apparatus'] = array(
    'title' => 'Apparatus Table',
    'page callback' => 'collationtools_tableapparatus',
    'access arguments' => array('view collation tools'),
    'type' => MENU_CALLBACK
  );
  $items['collationtools/compare'] = array(
    'title' => 'Compare',
    'page callback' => 'collationtools_compare',
    'access arguments' => array('view collation tools'),
    'type' => MENU_CALLBACK
  );
  $items['collationtools/slider'] = array(
    'title' => 'Slider Demo',
    'page callback' => 'collationtools_tableapparatus2',
    'access arguments' => array('view collation tools'),
    'type' => MENU_CALLBACK
  );
  return $items;
}
function collationtools_toc(){
  $list[] = l("Compare","collationtools/compare");
  $list[] = l("Table Apparatus","collationtools/apparatus");
  $render_array['collationtools_list'] = array(
    '#theme' => 'item_list',
    '#items' => $list
  );
  return $render_array;
}
function collationtools_compare($left=null, $right=null) {
  $modulePath = drupal_get_path('module', 'collationtools');
  drupal_add_css($modulePath . '/ui/app.css');
  drupal_add_js('/sites/all/libraries/ext-4.1.1a/ext-all.js');
  drupal_add_js($modulePath . '/ui/compareapp.js');
  return theme('extjsapp',array('left'=>$left, 'right'=>$right));
}
function collationtools_tableapparatus($left=null, $right=null) {
  $extjs = 'ext-4.1.1a';
  //if (($library = libraries_detect($extjs)) && !empty($library['installed'])) {
      $modulePath = drupal_get_path('module', 'collationtools');
      drupal_add_css($modulePath . '/ui/app.css');
      drupal_add_js('/sites/all/libraries/ext-4.1.1a/ext-all.js');
      drupal_add_js($modulePath . '/ui/app.js');
      return theme('extjsapp',array('left'=>$left, 'right'=>$right));
  //} else {
  //    return t('Please install ext-4.1.1a into /sites/all/libraries');
  //}

}
function collationtools_tableapparatus2($left=null, $right=null) {
   return theme('tableapparatus2',array('left'=>$left, 'right'=>$right));
}
function collationtools_theme(){
 return array(
    'extjsapp' => array(
       'template' => 'tableui',
       'variables' => array('left'=> null, 'right'=>null)
     ),
     'tableapparatus2' => array(
       'template' => 'slider',
       'variables' => array('left'=> null, 'right'=>null)
     )
 );
}

/**
 * @} End of "defgroup collationtools".
 */
